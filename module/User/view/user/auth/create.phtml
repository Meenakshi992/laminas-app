 <link href = "https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/classic/theme-classic/resources/theme-classic-all.css" 
         rel = "stylesheet" />
      <script type = "text/javascript" 
         src = "https://cdnjs.cloudflare.com/ajax/libs/extjs/6.0.0/ext-all.js"></script>
      
      <script type = "text/javascript">
    
         Ext.onReady(function() {
            var button = Ext.create('Ext.Button', {
               renderTo: Ext.getElementById('signup'),
               text: 'Register',
               
               listeners: {
                  myEvent: function(button) {

                    Ext.MessageBox.alert('Alert box', 'Data Inserted!');
                  }
               }
            });
            Ext.defer(function() {
               button.fireEvent('myEvent');
            }, 5000);
         }); 

        // Creation of form fields

         Ext.onReady(function() {
            Ext.create('Ext.form.Panel', {
               id: 'newForm',
               renderTo: 'signup',
               border: true,
               width: 600,
               
               items: [{
                  xtype: 'textfield',
                  fieldLabel: 'Name'
               },
              {
                  xtype: 'numberfield',
                  anchor: '100%',
                  fieldLabel: 'Age',
                  maxValue: 99,
                  minValue: 0
               }
              ]
            });
         });



         // Creation of data model
         Ext.define('PersonDataModel', {
            extend: 'Ext.data.Model',
            fields: [
               {name: 'name', mapping : 'name'},
               {name: 'age', mapping : 'age'},
               {name: 'marks', mapping : 'marks'}
            ]
         });
         
         Ext.onReady(function() {
            // Store data
            var myData = [
               { name : "Asha", age : "16", marks : "90" },
               { name : "Vinit", age : "18", marks : "95" },
               { name : "Manos", age : "22", marks : "07" },
               { name : "Anand", age : "20", marks : "68" },
               { name : "Niharika", age : "21", marks : "86" },
               { name : "Manali", age : "22", marks : "57" }
            ];
            
            // Creation of first grid store
            var gridStore = Ext.create('Ext.data.Store', {
               model: 'PersonDataModel',
               data: myData
            });
        
         Ext.create('Ext.data.Store', {
            model: 'StudentDataModel',
            proxy : {
               type : 'rest',
               actionMethods : {
                  read : 'POST'  // Get or Post type based on requirement
               },
               url : '/create.phtml', // here we have to include the rest URL path 
               // which fetches data from database or Json file path where the data is stored
               reader: {
                  type : 'json',  // the type of data which is fetched is of JSON type
                  root : 'data'
               },
            }
         });

             
            // Creation of first grid
            Ext.create('Ext.grid.Panel', {
               id                : 'gridId',
               store             : gridStore,
               stripeRows        : true,
               title             : 'Person Grid',  // Title for the grid
               renderTo          :'gridDiv',         // Div id where the grid has to be rendered
               width             : 600,
               collapsible       : true,             // property to collapse grid
               enableColumnMove  :true,              // property which allows column to move to different position by dragging that column.
               enableColumnResize:true,        // property which allows to resize column run time.
               
               columns           :
               [{ 
                  header: "Person Name",
                  dataIndex: 'name',  
                  id : 'name',    
                  flex:  1,        // property defines the amount of space this column is going to take in the grid container with respect to all.  
                  sortable: true,  // property to sort grid column data. 
                  hideable: true   // property which allows column to be hidden run time on user request.
               },{
                  header: "Age", 
                  dataIndex: 'age',
                  flex: .5, 
                  sortable: true,
                  hideable: false   // this column will not be available to be hidden.
               },{
                  header: "Status",
                  dataIndex: 'marks',
                  flex: .5, 
                  sortable: true, 
                  
                  // renderer is used to manipulate data based on some conditions here 
                  // who ever has marks greater than 75 will be displayed as 
                  // 'Distinction' else 'Non Distinction'.
                  renderer :  function (value, metadata, record, rowIndex, colIndex, store) {
                     if (value < 33) {
                        return "Fail";   
                     }
                     else if (value >= 33 && value <= 80 ) {
                        return "Average";   
                     } 
                     else if (value > 80 && value < 90) {
                        return "Good ";
                     } 
                     else {
                      return "Merit";
                     }
                  }
               }]
            });
         });


        
   //       Ext.create('Ext.grid.Panel', {
   //      store: user,
   //      id: 'user',
   //      title: 'Users',
   //      columns: [{
   //          header: 'ID',
   //          dataIndex: 'id'
   //      }, {
   //          header: 'NAME',
   //          dataIndex: 'name'
   //      }, {
   //          header: 'Email',
   //          dataIndex: 'email'
   //      }],
   //      height: 300,
   //      width: 400,
   //      renderTo: Ext.getBody()
   //  });


      </script>

   

  <div id = "signup"></div>
  <div id = "gridDiv"></div>




