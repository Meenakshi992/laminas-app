<script>
        // Creation of form fields
        Ext.onReady(function() {

        var addurl ="<?php echo $this->url('album', ['action' => 'add']); ?>";

           // var addurl = '/user/album/add/format/json';

            Ext.create('Ext.form.Panel', {
                id: 'formid',
                renderTo: 'addbtn',
                border: true,
                width: 600,
                
                items: [{
                    xtype : 'textfield',
                    anchor: '60%',
                    itemId: 'artist',
                    fieldLabel: 'Artist'
                },
                {
                    xtype : 'textfield',
                    anchor: '60%',
                    itemId: 'title',
                    fieldLabel: 'Title',
                },
                {
                        xtype : 'hiddenfield',
                        name: 'id',
                        itemId: 'id',
                        value: ''
                    },{
                        xtype : 'button',
                        text: 'SUBMIT',
                        width: '100%',
                        id: 'submitbutton',
                        listeners: {            //Implement listener
                        click: function () {
                            var form = Ext.getCmp('formid');
                            var values = form.getValues();//get values from form id
                            // console.log(values);
                            Ext.Ajax.request({
                                url: addurl,//Defined path of function defined in MVC 
                                method: 'POST',  
                                type:'json',      
                                params: {
                                    uName:values.id,//Bind values with database table field
                                    fName:values.artist,
                                    uDob: values.title
                                },
                                success: function (response) {
                                    alert('success');
                                    console.log(response.responseText);
                                },
                                failure: function (failure) {
                                    alert('fail');
                                    console.log(failure.responseText);
                                }
        
                            });
                        }
                    }
                }]
            });
    });
</script>

<div id = "addbtn"></div>
<?php /**  
<?php
$title = 'Add new album';
$this->headTitle($title);
?>
<h1><?= $this->escapeHtml($title) ?></h1>
<?php
// This provides a default CSS class and placeholder text for the title element:
$album = $form->get('title');
$album->setAttribute('class', 'form-control');
$album->setAttribute('placeholder', 'Album title');

// This provides a default CSS class and placeholder text for the artist element:
$artist = $form->get('artist');
$artist->setAttribute('class', 'form-control');
$artist->setAttribute('placeholder', 'Artist');

// This provides CSS classes for the submit button:
$submit = $form->get('submit');
$submit->setAttribute('class', 'btn btn-primary');

$form->setAttribute('action', $this->url('album', ['action' => 'add']));
$form->prepare();

echo $this->form()->openTag($form);
?>
<?php // Wrap the elements in divs marked as form groups, and render the
      // label, element, and errors separately within ?>
<div class="form-group">
    <?= $this->formLabel($album) ?>
    <?= $this->formElement($album) ?>
    <?= $this->formElementErrors()->render($album, ['class' => 'help-block']) ?>
</div>

<div class="form-group">
    <?= $this->formLabel($artist) ?>
    <?= $this->formElement($artist) ?>
    <?= $this->formElementErrors()->render($artist, ['class' => 'help-block']) ?>
</div>

<?php
echo $this->formSubmit($submit);
echo $this->formHidden($form->get('id'));
echo $this->form()->closeTag();

?>
*/
?>